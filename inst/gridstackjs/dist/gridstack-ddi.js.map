{"version":3,"file":"gridstack-ddi.js","sourceRoot":"","sources":["../src/gridstack-ddi.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAIH;;GAEG;AACH,MAAa,YAAY;IAIvB,gFAAgF;IAChF,MAAM,CAAC,cAAc,CAAC,WAAgC;QACpD,YAAY,CAAC,GAAG,GAAG,IAAI,WAAW,EAAE,CAAC;QACrC,OAAO,YAAY,CAAC,GAAG,CAAC;IAC1B,CAAC;IAED,+CAA+C;IAC/C,MAAM,CAAC,GAAG;QACR,OAAO,YAAY,CAAC,GAAG,IAAI,YAAY,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;IACvE,CAAC;IAED,4DAA4D;IAC5D,gEAAgE;IACzD,MAAM,CAAC,EAAuB;QACnC,OAAO,IAAI,CAAC,CAAC,yBAAyB;IACxC,CAAC;CACF;AApBD,oCAoBC","sourcesContent":["/**\r\n * gridstack-ddi.ts 4.2.3\r\n * Copyright (c) 2021 Alain Dumesny - see GridStack root license\r\n */\r\n\r\nimport { GridItemHTMLElement } from './types';\r\n\r\n/**\r\n * Abstract Partial Interface API for drag'n'drop plugin - look at GridStackDD and HTML5 / Jquery implementation versions\r\n */\r\nexport class GridStackDDI {\r\n\r\n  protected static ddi: GridStackDDI;\r\n\r\n  /** call this method to register your plugin instead of the default no-op one */\r\n  static registerPlugin(pluginClass: typeof GridStackDDI): GridStackDDI {\r\n    GridStackDDI.ddi = new pluginClass();\r\n    return GridStackDDI.ddi;\r\n  }\r\n\r\n  /** get the current registered plugin to use */\r\n  static get(): GridStackDDI {\r\n    return GridStackDDI.ddi || GridStackDDI.registerPlugin(GridStackDDI);\r\n  }\r\n\r\n  /** removes any drag&drop present (called during destroy) */\r\n  /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\r\n  public remove(el: GridItemHTMLElement): GridStackDDI {\r\n    return this; // no-op for static grids\r\n  }\r\n}\r\n"]}