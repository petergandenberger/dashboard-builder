{"version":3,"file":"gridstack-dd-jqueryui.js","sourceRoot":"","sources":["../../src/jq/gridstack-dd-jqueryui.ts"],"names":[],"mappings":"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","sourcesContent":["// gridstack-dd-jqueryui.ts 4.2.3\r\n// Copyright (c) 2021 Alain Dumesny - see root license\r\nimport { GridStackElement } from '../gridstack';\r\nimport { GridStackDD, DDOpts, DDKey, DDDropOpt, DDCallback, DDValue } from '../gridstack-dd';\r\nimport { GridItemHTMLElement, DDDragInOpt } from '../types';\r\n\r\n// export jq symbols see\r\n// https://stackoverflow.com/questions/35345760/importing-jqueryui-with-typescript-and-requirejs\r\n// https://stackoverflow.com/questions/33998262/jquery-ui-and-webpack-how-to-manage-it-into-module\r\n//\r\n// Note: user should be able to bring their own by changing their webpack aliases like\r\n// alias: {\r\n//   'jquery': 'gridstack/dist/jq/jquery.js',\r\n//   'jquery-ui': 'gridstack/dist/jq/jquery-ui.js',\r\n//   'jquery.ui': 'gridstack/dist/jq/jquery-ui.js',\r\n//   'jquery.ui.touch-punch': 'gridstack/dist/jq/jquery.ui.touch-punch.js',\r\n// },\r\nimport * as $ from 'jquery'; // compile this in... having issues TS/ES6 app would include instead\r\nexport { $ };\r\nimport 'jquery-ui';\r\nimport 'jquery.ui.touch-punch'; // include for touch mobile devices\r\n\r\n// export our base class (what user should use) and all associated types\r\nexport * from '../gridstack-dd';\r\n\r\n/**\r\n * legacy Jquery-ui based drag'n'drop plugin.\r\n */\r\nexport class GridStackDDJQueryUI extends GridStackDD {\r\n\r\n  public resizable(el: GridItemHTMLElement, opts: DDOpts, key?: DDKey, value?: DDValue): GridStackDD {\r\n    let $el: JQuery = $(el);\r\n    if (opts === 'enable') {\r\n      $el.resizable().resizable(opts);\r\n    } else if (opts === 'disable' || opts === 'destroy') {\r\n      if ($el.data('ui-resizable')) { // error to call destroy if not there\r\n        $el.resizable(opts);\r\n      }\r\n    } else if (opts === 'option') {\r\n      $el.resizable(opts, key, value);\r\n    } else {\r\n      const grid = el.gridstackNode.grid;\r\n      let handles = $el.data('gs-resize-handles') ? $el.data('gs-resize-handles') : grid.opts.resizable.handles;\r\n      $el.resizable({\r\n        ...grid.opts.resizable,\r\n        ...{ handles: handles },\r\n        ...{\r\n          start: opts.start, // || function() {},\r\n          stop: opts.stop, // || function() {},\r\n          resize: opts.resize // || function() {}\r\n        }\r\n      });\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public draggable(el: GridItemHTMLElement, opts: DDOpts, key?: DDKey, value?: DDValue): GridStackDD {\r\n    let $el: JQuery = $(el);\r\n    if (opts === 'enable') {\r\n      $el.draggable().draggable('enable');\r\n    } else if (opts === 'disable' || opts === 'destroy') {\r\n      if ($el.data('ui-draggable')) { // error to call destroy if not there\r\n        $el.draggable(opts);\r\n      }\r\n    } else if (opts === 'option') {\r\n      $el.draggable(opts, key, value);\r\n    } else {\r\n      const grid = el.gridstackNode.grid;\r\n      $el.draggable({...grid.opts.draggable, ...{ // was using $.extend()\r\n        containment: (grid.opts._isNested && !grid.opts.dragOut) ?\r\n          $(grid.el).parent() : (grid.opts.draggable.containment || null),\r\n        start: opts.start, // || function() {},\r\n        stop: opts.stop, // || function() {},\r\n        drag: opts.drag // || function() {}\r\n      }});\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public dragIn(el: GridStackElement, opts: DDDragInOpt): GridStackDD {\r\n    let $el: JQuery = $(el as any); // workaround Type 'string' is not assignable to type 'PlainObject<any>' - see https://github.com/DefinitelyTyped/DefinitelyTyped/issues/29312\r\n    $el.draggable(opts);\r\n    return this;\r\n  }\r\n\r\n  public droppable(el: GridItemHTMLElement, opts: DDOpts | DDDropOpt, key?: DDKey, value?: DDValue): GridStackDD {\r\n    let $el: JQuery = $(el);\r\n    if (typeof opts.accept === 'function' && !opts._accept) {\r\n      // convert jquery event to generic element\r\n      opts._accept = opts.accept;\r\n      opts.accept = ($el: JQuery) => opts._accept($el.get(0));\r\n    }\r\n    $el.droppable(opts, key, value);\r\n    return this;\r\n  }\r\n\r\n  public isDroppable(el: HTMLElement): boolean {\r\n    let $el: JQuery = $(el);\r\n    return Boolean($el.data('ui-droppable'));\r\n  }\r\n\r\n  public isDraggable(el: HTMLElement): boolean {\r\n    let $el: JQuery = $(el);\r\n    return Boolean($el.data('ui-draggable'));\r\n  }\r\n\r\n  public isResizable(el: HTMLElement): boolean {\r\n    let $el: JQuery = $(el);\r\n    return Boolean($el.data('ui-resizable'));\r\n  }\r\n\r\n  public on(el: GridItemHTMLElement, name: string, callback: DDCallback): GridStackDD {\r\n    let $el: JQuery = $(el);\r\n    $el.on(name, (event, ui) => { return callback(event as any, ui.draggable ? ui.draggable[0] : event.target, ui.helper ? ui.helper[0] : null) });\r\n    return this;\r\n  }\r\n\r\n  public off(el: GridItemHTMLElement, name: string): GridStackDD {\r\n    let $el: JQuery = $(el);\r\n    $el.off(name);\r\n    return this;\r\n  }\r\n}\r\n\r\n// finally register ourself\r\nGridStackDD.registerPlugin(GridStackDDJQueryUI);\r\n"]}